{"version":3,"sources":["Square.js","Board.js","Game.js","Tournament.js","App.js","serviceWorker.js","index.js"],"names":["Square","className","onClick","this","props","style","backgroundColor","bgColor","value","React","Component","Board","state","squares","Array","fill","xIsNext","winner","i","handleClick","slice","calculateWinner","setState","player1","player2","status","renderSquare","lines","length","a","b","c","Game","Tournament","App","start","changePlayer1","bind","changePlayer2","handleSubmit","event","target","preventDefault","onSubmit","type","onChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31decf82.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Square extends React.Component {\n    render() {\n        return(\n            <button\n                className=\"square\"\n                onClick = {this.props.onClick}\n                style={{backgroundColor:this.props.bgColor}}>\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nexport default Square;","import React from \"react\";\nimport Square from \"./Square\";\n\nclass Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            bgColor: Array(9).fill(null),\n            xIsNext:true,\n            winner:'',\n        }\n    }\n\n    renderSquare(i) {\n        return <Square\n            value={this.state.squares[i]}\n            onClick={() => this.handleClick(i)}\n            bgColor={this.state.bgColor[i]}/>;\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        const bgColor = this.state.bgColor.slice();\n\n        if (this.calculateWinner(this.state.squares) || squares[i]) {\n            return;\n        }\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        bgColor[i] = this.state.xIsNext ? '#aaaaaa' : 'yellow';\n        this.setState({\n                squares: squares,\n                bgColor: bgColor,\n                xIsNext: !this.state.xIsNext,\n                winner: (this.state.xIsNext ? this.props.player1 : this.props.player2),\n            });\n    }\n\n    render() {\n        const winner = this.calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'winner is ' + this.state.winner;\n        }\n        else {\n            status = 'Next Player :: ' + (this.state.xIsNext ? this.props.player1 : this.props.player2);\n        }\n        return(\n            <div>\n                <div> {status} </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n\n    calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n}\n\nexport default Board;","import React from \"react\";\nimport Board from \"./Board\";\n\nclass Game extends React.Component {\n    render() {\n        return (\n        <div>\n            <div className=\"game-board\">\n                <Board player1={this.props.player1} player2={this.props.player2}/>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Game;","import React from \"react\";\nimport Game from \"./Game\";\n\nclass Tournament extends React.Component {\n    render() {\n        return(\n            <div>\n                <div className=\"tournament\">\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                </div>\n                <div className=\"tournament\">\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                </div>\n                <div className=\"tournament\">\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                    <Game player1={this.props.player1} player2={this.props.player2}/>\n                </div>\n                <div>\n                    Total games :: 12 <br/>\n                    {this.props.player1}::<br/>\n                    {this.props.player2}::<br/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tournament;","import React from 'react';\nimport './App.css';\nimport Tournament from \"./Tournament\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            player1: '',\n            player2: '',\n            start: '',\n        };\n        this.changePlayer1 = this.changePlayer1.bind(this);\n        this.changePlayer2 = this.changePlayer2.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changePlayer1(event) {\n        this.setState({player1: event.target.value,\n            player2: this.state.player2,\n            start:'',\n        });\n    }\n\n    changePlayer2(event) {\n        this.setState({player1: this.state.player1,\n            player2: event.target.value,\n            start:'',\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState({player1: this.state.player1,\n            player2: this.state.player2,\n            start:'start',\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Player1:\n                            <input type=\"text\" value={this.state.player1} onChange={this.changePlayer1}/> <br/>\n                        </label>\n                        <label>\n                            Player2:\n                            <input type=\"text\" value={this.state.player2} onChange={this.changePlayer2} /><br/>\n                        </label>\n                        <input type=\"submit\" value=\"Start\"/>\n                    </form>\n                </div>\n                {((this.state.start) && (this.state.player1) && (this.state.player2)) ? <Tournament player1={this.state.player1} player2={this.state.player2}/> : <div></div>}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}